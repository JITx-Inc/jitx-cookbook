; This file is generated based on the parts database query below:")
;   database-part(["manufacturer" => "Texas Instruments", "mpn" => "HD3SS3220RNHR"])
#use-added-syntax(jitx)
defpackage components/Texas-Instruments/HD3SS3220RNHR :
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/bundles
  import ocdb/utils/generic-components
  import ocdb/utils/box-symbol


pcb-pad capsule-smd-pad :
  name = "capsule-smd-pad"
  type = SMD
  shape = Capsule(0.2, 0.505, loc(0.0, 0.0))
  layer(SolderMask(Top)) = Capsule(0.302, 0.607, loc(0.0, 0.0))
  layer(Paste(Top)) = Capsule(0.2, 0.505, loc(0.0, 0.0))

pcb-pad capsule-smd-pad-1 :
  name = "capsule-smd-pad-1"
  type = SMD
  shape = Capsule(0.505, 0.2, loc(0.0, 0.0))
  layer(SolderMask(Top)) = Capsule(0.607, 0.302, loc(0.0, 0.0))
  layer(Paste(Top)) = Capsule(0.505, 0.2, loc(0.0, 0.0))

pcb-pad rectangle-smd-pad :
  name = "rectangle-smd-pad"
  type = SMD
  shape = Rectangle(3.200, 1.200)
  layer(SolderMask(Top)) = Rectangle(3.302, 1.302)
  layer(Paste(Top)) = Rectangle(3.200, 1.200)

pcb-pad polygon-smd-pad :
  name = "polygon-smd-pad"
  type = SMD
  shape = Polygon([
    Point(0.250, 0.099)
    Point(0.250, -0.101)
    Point(-0.250, -0.100)
    Point(-0.250, -0.100)
    Point(-0.250, 0.0)
    Point(-0.250, 0.0)
    Point(-0.150, 0.099)])

pcb-pad polygon-smd-pad-1 :
  name = "polygon-smd-pad-1"
  type = SMD
  shape = Polygon([
    Point(0.100, 0.250)
    Point(-0.100, 0.250)
    Point(-0.100, -0.249)
    Point(-0.100, -0.249)
    Point(0.0, -0.249)
    Point(0.0, -0.249)
    Point(0.100, -0.150)])

pcb-pad polygon-smd-pad-2 :
  name = "polygon-smd-pad-2"
  type = SMD
  shape = Polygon([
    Point(-0.100, -0.251)
    Point(0.100, -0.251)
    Point(0.100, 0.249)
    Point(0.100, 0.249)
    Point(0.0, 0.249)
    Point(0.0, 0.249)
    Point(-0.100, 0.149)])

pcb-pad polygon-smd-pad-3 :
  name = "polygon-smd-pad-3"
  type = SMD
  shape = Polygon([
    Point(-0.250, -0.099)
    Point(-0.250, 0.100)
    Point(0.250, 0.100)
    Point(0.250, 0.100)
    Point(0.250, 0.0)
    Point(0.250, 0.0)
    Point(0.150, -0.099)])

pcb-pad polygon-smd-pad-4 :
  name = "polygon-smd-pad-4"
  type = SMD
  shape = Polygon([
    Point(-0.250, 0.099)
    Point(-0.250, -0.101)
    Point(0.250, -0.101)
    Point(0.250, -0.100)
    Point(0.250, -0.000999999999976353)
    Point(0.250, -0.000999999999976353)
    Point(0.150, 0.099)])

pcb-pad polygon-smd-pad-5 :
  name = "polygon-smd-pad-5"
  type = SMD
  shape = Polygon([
    Point(-0.100, 0.250)
    Point(0.100, 0.250)
    Point(0.100, -0.250)
    Point(0.100, -0.250)
    Point(0.0, -0.250)
    Point(0.0, -0.250)
    Point(-0.100, -0.150)])

pcb-pad polygon-smd-pad-6 :
  name = "polygon-smd-pad-6"
  type = SMD
  shape = Polygon([
    Point(0.100, -0.251)
    Point(-0.100, -0.251)
    Point(-0.100, 0.249)
    Point(-0.100, 0.249)
    Point(0.0, 0.249)
    Point(0.0, 0.249)
    Point(0.100, 0.149)])

pcb-pad polygon-smd-pad-7 :
  name = "polygon-smd-pad-7"
  type = SMD
  shape = Polygon([
    Point(0.250, -0.099)
    Point(0.250, 0.100)
    Point(-0.250, 0.100)
    Point(-0.250, 0.100)
    Point(-0.250, 0.0)
    Point(-0.250, 0.0)
    Point(-0.150, -0.099)])

pcb-landpattern lp :
  pad p[1] : polygon-smd-pad-2 at loc(-1.800, -1.200) on Top
  pad p[2] : capsule-smd-pad at loc(-1.400, -1.200) on Top
  pad p[3] : capsule-smd-pad at loc(-1.000, -1.200) on Top
  pad p[4] : capsule-smd-pad at loc(-0.600, -1.200) on Top
  pad p[5] : capsule-smd-pad at loc(-0.200, -1.200) on Top
  pad p[6] : capsule-smd-pad at loc(0.200, -1.200) on Top
  pad p[7] : capsule-smd-pad at loc(0.600, -1.200) on Top
  pad p[8] : capsule-smd-pad at loc(1.000, -1.200) on Top
  pad p[9] : capsule-smd-pad at loc(1.400, -1.200) on Top
  pad p[10] : polygon-smd-pad-6 at loc(1.800, -1.200) on Top
  pad p[11] : polygon-smd-pad-7 at loc(2.200, -0.801) on Top
  pad p[12] : capsule-smd-pad-1 at loc(2.200, -0.401) on Top
  pad p[13] : capsule-smd-pad-1 at loc(2.200, -0.000499999999988177) on Top
  pad p[14] : capsule-smd-pad-1 at loc(2.200, 0.400) on Top
  pad p[15] : polygon-smd-pad at loc(2.200, 0.800) on Top
  pad p[16] : polygon-smd-pad-1 at loc(1.800, 1.199) on Top
  pad p[17] : capsule-smd-pad at loc(1.400, 1.199) on Top
  pad p[18] : capsule-smd-pad at loc(1.000, 1.199) on Top
  pad p[19] : capsule-smd-pad at loc(0.600, 1.199) on Top
  pad p[20] : capsule-smd-pad at loc(0.200, 1.199) on Top
  pad p[21] : capsule-smd-pad at loc(-0.200, 1.199) on Top
  pad p[22] : capsule-smd-pad at loc(-0.600, 1.199) on Top
  pad p[23] : capsule-smd-pad at loc(-1.000, 1.199) on Top
  pad p[24] : capsule-smd-pad at loc(-1.400, 1.199) on Top
  pad p[25] : polygon-smd-pad-5 at loc(-1.800, 1.199) on Top
  pad p[26] : polygon-smd-pad-4 at loc(-2.200, 0.800) on Top
  pad p[27] : capsule-smd-pad-1 at loc(-2.200, 0.400) on Top
  pad p[28] : capsule-smd-pad-1 at loc(-2.200, -0.000499999999988177) on Top
  pad p[29] : capsule-smd-pad-1 at loc(-2.200, -0.401) on Top
  pad p[30] : polygon-smd-pad-3 at loc(-2.200, -0.801) on Top
  pad p[31] : rectangle-smd-pad at loc(0.0, -0.000499999999988177) on Top

  layer(Silkscreen("F-SilkS", Top)) = Text(">REF", 1.0, W, loc(-1.500, 3.032), "", TrueTypeFont, false, false)
  layer(Finish(Top)) = Text(">VALUE", 1.0, W, loc(-1.500, 2.032), "", TrueTypeFont, false, false)
  layer(Silkscreen("F-SilkS", Top)) = Polyline(0.152, [
    Point(-2.326, 1.102)
    Point(-2.326, 1.327)
    Point(-2.102, 1.327)])
  layer(Silkscreen("F-SilkS", Top)) = Polyline(0.152, [
    Point(2.326, 1.102)
    Point(2.326, 1.327)
    Point(2.103, 1.327)])
  layer(Silkscreen("F-SilkS", Top)) = Polyline(0.152, [
    Point(-2.326, -1.103)
    Point(-2.326, -1.327)
    Point(-2.102, -1.327)])
  layer(Silkscreen("F-SilkS", Top)) = Polyline(0.152, [
    Point(2.326, -1.103)
    Point(2.326, -1.327)
    Point(2.103, -1.327)])
  layer(Finish(Top)) = Polyline(0.060, [
    Arc(-2.250, -1.250, 0.030, 0.0, -360.000)])
  layer(Silkscreen("F-SilkS", Top)) = Polyline(0.150, [
    Arc(-1.800, -1.731, 0.075, 0.0, -360.000)])
  layer(Finish(Top)) = Polyline(0.150, [
    Arc(-1.800, -1.550, 0.075, 0.0, -360.000)])
  layer(Courtyard(Top)) = Rectangle(4.652, 2.653)

public pcb-component component :
  name = "C165155"
  description = " WQFN-30-EP(2.5x4.5)  Battery Management ICs ROHS"
  manufacturer = "Texas Instruments"
  mpn = "HD3SS3220RNHR"
  datasheet = "https://datasheet.lcsc.com/lcsc/1809010911_Texas-Instruments-HD3SS3220RNHR_C165155.pdf"
  reference-prefix = "U"
  pin-properties :
    ;---Custom Pin Order Mapping--------------

    ;---Right Side of Component----------------
    [pin:Ref | pads:Ref ... | side:Dir | electrical-type:String | bank:Int]
    [CC1 | p[2] | Right | "unspecified" | 0]
    [CC2 | p[1] | Right | "unspecified" | 0]
    [ENn_MUX | p[12] | Right | "unspecified" | 0]
    [TX1p | p[17] | Right | "unspecified" | 0]
    [TX1n | p[16] | Right | "unspecified" | 0]
    [RX1p | p[15] | Right | "unspecified" | 0]
    [RX1n | p[14] | Right | "unspecified" | 0]
    [TX2p | p[21] | Right | "unspecified" | 0]
    [TX2n | p[20] | Right | "unspecified" | 0]
    [RX2p | p[19] | Right | "unspecified" | 0]
    [RX2n | p[18] | Right | "unspecified" | 0]
    [GND0 | p[13] | Down | "unspecified" | 0]
    [GND1 | p[28] | Down | "unspecified" | 0]
    [EP | p[31] | Down | "unspecified" | 0]
    
    ;----Left Side of Component--------------
    [VDD5 | p[30] | Left | "power" | 0]
    [VCC33 | p[8] | Left | "unspecified" | 0]
    [VBUS_DET | p[5] | Left | "unspecified" | 0]
    [ENn_CC | p[29] | Left | "unspecified" | 0]
    [DIR | p[11] | Left | "unspecified" | 0]
    [INT_N_OUT3 | p[23] | Left | "unspecified" | 0]
    [ID | p[27] | Left | "unspecified" | 0]
    [ADDR | p[22] | Left | "unspecified" | 0]
    [PORT | p[4] | Left | "unspecified" | 0]
    [VCONN_FAULT_N | p[24] | Left | "unspecified" | 0]
    [CURRENT_MODE | p[3] | Left | "unspecified" | 0]
    [SDA_OUT1 | p[25] | Left | "unspecified" | 0]
    [SCL_OUT2 | p[26] | Left | "unspecified" | 0]
    [TXp | p[6] | Left | "unspecified" | 0]
    [TXn | p[7] | Left | "unspecified" | 0]
    [RXp | p[9] | Left | "unspecified" | 0]
    [RXn | p[10] | Left | "unspecified" | 0]
    
    ; Original Pin Map Order
    ; [pin:Ref | pads:Ref ... | side:Dir | electrical-type:String | bank:Int]
    ; [CC2 | p[1] | Right | "unspecified" | 0]
    ; [CC1 | p[2] | Right | "unspecified" | 0]
    ; [CURRENT_MODE | p[3] | Left | "unspecified" | 0]
    ; [PORT | p[4] | Left | "unspecified" | 0]
    ; [VBUS_DET | p[5] | Left | "unspecified" | 0]
    ; [TXp | p[6] | Left | "unspecified" | 0]
    ; [TXn | p[7] | Left | "unspecified" | 0]
    ; [VCC33 | p[8] | Left | "unspecified" | 0]
    ; [RXp | p[9] | Left | "unspecified" | 0]
    ; [RXn | p[10] | Left | "unspecified" | 0]
    ; [DIR | p[11] | Left | "unspecified" | 0]
    ; [ENn_MUX | p[12] | Right | "unspecified" | 0]
    ; [GND0 | p[13] | Down | "unspecified" | 0]
    ; [RX1n | p[14] | Right | "unspecified" | 0]
    ; [RX1p | p[15] | Right | "unspecified" | 0]
    ; [TX1n | p[16] | Right | "unspecified" | 0]
    ; [TX1p | p[17] | Right | "unspecified" | 0]
    ; [RX2n | p[18] | Right | "unspecified" | 0]
    ; [RX2p | p[19] | Right | "unspecified" | 0]
    ; [TX2n | p[20] | Right | "unspecified" | 0]
    ; [TX2p | p[21] | Right | "unspecified" | 0]
    ; [ADDR | p[22] | Left | "unspecified" | 0]
    ; [INT_N_OUT3 | p[23] | Left | "unspecified" | 0]
    ; [VCONN_FAULT_N | p[24] | Left | "unspecified" | 0]
    ; [SDA_OUT1 | p[25] | Left | "unspecified" | 0]
    ; [SCL_OUT2 | p[26] | Left | "unspecified" | 0]
    ; [ID | p[27] | Left | "unspecified" | 0]
    ; [GND1 | p[28] | Down | "unspecified" | 0]
    ; [ENn_CC | p[29] | Left | "unspecified" | 0]
    ; [VDD5 | p[30] | Left | "power" | 0]
    ; [EP | p[31] | Down | "unspecified" | 0]

  assign-landpattern(lp)
  make-box-symbol()

  property(self.category) = "power_supply_chip"
  property(self.manufacturer) = "Texas Instruments"
  property(self.manufacturer_aliases) = ["Texas Instruments"]
  property(self.mpn) = "HD3SS3220RNHR"
  property(self.mpn_aliases) = ["HD3SS3220RNHR"]
  property(self.cofactr_id) = "ICPNZ4H3KG71"
  property(self.reference_prefix) = "U"
  property(self.trust) = "low"
  property(self.x) = 4.652
  property(self.y) = 2.653
  property(self.area) = 12.342
  property(self.case) = "WQFN-30-EP(2.5x4.5)"
  property(self.\|vendor_part_numbers.lcsc|) = "C165155"
  property(self.minimum_quantity) = 1
  property(self.price) = 2.052
  property(self.stock) = 3031

public pcb-bundle usb-3-data :
  pin P
  pin N

public pcb-bundle usb3p1-c :
  port data : usb-3-data[[1 2]]
  port vbus : power
  port cc : pin[[1 2]]
  port sbu : pin[[1 2]]
  port rx0 : diff-pair[[1 2]]
  port rx1 : diff-pair[[1 2]]
  port rx2 : diff-pair[[1 2]]
  port tx0 : diff-pair[[1 2]]
  port tx1 : diff-pair[[1 2]]
  port tx2 : diff-pair[[1 2]]
  

public pcb-module module :
  ; Create ports for the module to connect to outside objects
  port usb : usb3p1-c  ;naming the usb3p1-c pcb-bundle item a custom port name, whose sub-ports can be accessed by declaring a module port name. the bundle gets brought into the higher level module this way
  port pwr3v3 : power ;naming the usb3p1-c pcb-bundle item a custom port name, whose sub-ports can be accessed by declaring a module port name. the bundle gets brought into the higher level module this way
  port pwr5v0 : power ;naming the usb3p1-c pcb-bundle item a custom port name, whose sub-ports can be accessed by declaring a module port name. the bundle gets brought into the higher level module this way
  
  ; name some important nets, like GND and set the ports of the module to connect to GND
  net GND (pwr3v3.gnd pwr5v0.gnd)
  
  ; Instantiate the Controller, whose name is controller. To call pins, name them 'controller.pinname' where pinname comes from the table above where 'component' was defined
  inst controller : components/Texas-Instruments/HD3SS3220RNHR/component ;creating a component instance of this TI part named 'controller' within our current module
  
  ;================ADDING COMPONENTS AND CONNECTIONS========================

  ;----------------Connections Explained with Examples---------------------------------
  ; Quick guide on how to make the connections you need.
  ; 
  ; Connection Type 1: connecting a component pin to a net
  ; net (port_given_name.bundle's_pin_name_which_now_belongs_to_our_given_port_name component_name_upon_instantiation.pin_name_within_table_definition_of_original_component_instantiated)
  ;
  ; 
  ; Explanation: net (usb.cc[1] controller.CC1) executes the net command to connect port named 'usb' which is associated with
  ; the bundle it was named after ('usb3p1-c' in this case), and that bundle's port names are pulled into our 'usb' port
  ; within our pcb module declared above. Now, 'usb' having taken on the pin properties of 'usb3p1-c', it has a port pin
  ; named 'cc[1]' as declared above under 'usb3p1-c'. this port pin is then connected to 'controller.CC1', where
  ; 'controller' is the name we gave to the component upon instantiation. This 'controller' has the pins found in the
  ; original component from our manufacturer. Its name is unique now. It has a pin 'CC1' now as well. net connects those pins
  ;
  ; Connection Type 2:  Connecting a component pin to a voltage rail and decoupling it from GND through a decoupling capacitor
  ; bypass-cap-strap(instantiated_component_name.pin_within_original_component_definition, GND, capacitor_value_in_SI_units)
  ; e.g. bypass-cap-strap(controller.VDD5, GND, 47.0e-6)
  ; 
  ; Connection Type 3: Connecting a component pin to another net through a series capacitor
  ; bypass-cap-strap(instantiated_component_name.pin_within_original_component_definition, declared_port_name_for_a_bundle.bundle_pin_name, capacitor_value_in_SI_units)
  ; e.g. bypass-cap-strap(controller.RXn, usb.rx0[1].N, 470.0e-9)
  ; 
  ; Connection Type 4: Connecting a component pin to a net through a pull-down, pull-up or series resistor
  ; res-strap(instantiated_component_name.pin_within_original_component_definition, GND, resistor_value_to_1_decimal_place_and_SI_units) 
  ; e.g. res-strap(controller.TXp, GND, 100.0e3) - creates a 100 kOhm series resistor that connects the controller pin named TXp to ground
  
  ;----------------Component Left-Side Support Connections (13 total) ---------------------------------
  bypass-cap-strap(controller.VDD5, GND, 47.0e-6)           ;01-pin 30, VDD5 connects to +5V_COM directly, decoupled from GND through a 47uF capacitor
  bypass-cap-strap(controller.VCC33, GND, 100.0e-9)         ;02-pin 8, VCC33 connects to +3.3V and is decoupled from GND through a 100nF capacitor
  res-strap(controller.VBUS_DET, pwr5v0.vdd, 909.0e3)       ;03-vdd vs VDD might be case-sensitive. so use vdd as defined instead of VDD.
  res-strap(controller.ENn_CC, GND, 0.0)                    ;04-connects to GND through a 0 ohm resistor
  res-strap(controller.PORT, GND, 4.7e3)                    ;05-connects to GND through a 4.7 kohm resistor
  bypass-cap-strap(controller.VCONN_FAULT_N, GND, 47.0e-6)  ;06-adds a 100nF capacitor bypass cap to the controller's VCC33 pin to ground
  res-strap(controller.CURRENT_MODE, pwr3v3.vdd, 10.0e3)    ;07-connects controller current mode pin to 10k series resistor to 3.3V
  res-strap(controller.TXp, GND, 100.0e3)                   ;08-connects controller pin to GND by way of a series 100k Ohm resistor
  res-strap(controller.TXn, GND, 100.0e3)                   ;09-connects controller pin to GND by way of a series 100k Ohm resistor
  bypass-cap-strap(controller.RXp, usb.rx0[1].P, 470.0e-9)  ;10-connects controller pin to differential pin of declared USB module through a series capacitor of 470nF
  res-strap(controller.RXp, GND, 100.0e3)                   ;11-connects controller pin to GND by way of a series 100k Ohm resistor
  bypass-cap-strap(controller.RXn, usb.rx0[1].N, 470.0e-9)  ;12-connects controller pin to differential pin of declared USB module through a series capacitor of 470nF
  res-strap(controller.RXn, GND, 100.0e3)                   ;13-connects controller pin to GND by way of a series 100k Ohm resistor

  ;-----------Right Side Controller Support Connections (14 total)------------------------------------
  net (usb.cc[1] controller.CC1)                            ;01-usb.cc[1] is fine, instead of usb.cc[1].P because it's single ended, not a diffpair
  net (usb.cc[2] controller.CC2)                            ;02-usb.cc[2] is fine, instead of usb.cc[2].P because it's single ended, not a diffpair
  res-strap(controller.ENn_MUX, GND, 0.0)                   ;03-places resistor between controller pin and some net or port net, then establishes the resistor value we need in the format xx.xe^n, where xx.x is the value to 1 decimal place, and n is the power with respect to milli → -3, micro → -6, kilo → 3 and so on.)
  bypass-cap-strap(controller.TX1p, usb.tx1[1].P, 470.0e-9) ;04-adds a series capacitor between controller pin and module's port/pin
  bypass-cap-strap(controller.TX1n, usb.tx1[1].N, 470.0e-9) ;05-adds a series capacitor between controller pin and module's port/pin
  net (usb.rx1[1].P controller.RX1p)                        ;06-connect the USB port - USB is the high-level module, connecting to the component's/controller's pin inside the module and gives access to the outside world via the port
  net (usb.rx1[1].N controller.RX1n)                        ;07-connect the USB port - USB is the high-level module, connecting to the component's/controller's pin inside the module and gives access to the outside world via the port
  bypass-cap-strap(controller.TX2p, usb.tx2[1].P, 470.0e-9) ;08-adds a series capacitor between controller pin and module's port/pin
  bypass-cap-strap(controller.TX2n, usb.tx2[1].N, 470.0e-9) ;09-adds a series capacitor between controller pin and module's port/pin
  net (usb.rx2[2].P controller.RX2p)                        ;10-connect the USB port - USB is the high-level module, connecting to the component's/controller's pin inside the module and gives access to the outside world via the port
  net (usb.rx2[2].N controller.RX2n)                        ;11-connect the USB port - USB is the high-level module, connecting to the component's/controller's pin inside the module and gives access to the outside world via the port
  net (GND controller.GND0 controller.GND1 controller.EP)   ;12, 13, 14 - GND to controller GND0, GND1 and GND_EP

;view(component)