; Generated by JITX 2eaba7760602d168bf12b0fa7704dcb631c4981e
#use-added-syntax(jitx)
defpackage regulator_example/regulator_example/main :
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/bundles
  import regulator_example/helpers
  import ocdb/utils/generic-components    

; Define the shape/size of the board
val board-shape = RoundedRectangle(30.0, 25.0, 3.0)


pcb-routing-structure single-ended :
  name = "50 Ohm single-ended"
  layer(Top) :
    trace-width = 0.1933     ; mm
    clearance = 0.1         ; mm
    velocity = 0.19e12      ; mm/s
    insertion-loss = 0.008  ; db/mm @ 1GHz 
    neck-down = NeckDown(0.1933 0.1 false false)

pcb-differential-routing-structure differential :
  name = "90 Ohm common-mode impedance"
  layer(Top) :
    trace-width = 0.1283    ; mm
    pair-spacing = 0.125     ; mm
    clearance = 0.3         ; mm
    velocity = 0.19e12      ; mm/s
    insertion-loss = 0.008  ; db/mm @ 1GHz 
        
  uncoupled-region = single-ended

public defn differential-constraint (in1:JITXObject, out1:JITXObject, in2:JITXObject, out2:JITXObject) :
  inside pcb-module :
    net (in1 out1)
    net (in2 out2)
    topology-segment(in1 out1)
    topology-segment(in2 out2)
    structure(in1 => out1, in2 => out2) = differential
    timing-difference(in1 => out1, in2 => out2) = TimingDifferenceConstraint(-1.e-12, 1.e-12)
       
pcb-module power-supply :
  port P20V-out : power
  port P3V3-out : power
  port P5V0-out : power
  port usb : usb-2-data

  ; 100W PD set up
  public inst usb-connector : ocdb/components/korean-hroparts-elec/TYPE-C-31-M-12/component

  net (usb.N usb-connector.DN1 usb-connector.DN2)
  net (usb.P usb-connector.DP1 usb-connector.DP2)

  topology-segment(usb.N usb-connector.DN1)
  topology-segment(usb-connector.DN1 usb-connector.DN2)

  topology-segment(usb.P usb-connector.DP2)
  topology-segment(usb-connector.DP1 usb-connector.DP2)

  inst pd-sink : regulator_example/components/CH224K/module(20.0)
  net (usb-connector.CC1 pd-sink.cc1)
  net (usb-connector.CC2 pd-sink.cc2)

  net P20V (usb-connector.VBUS pd-sink.VBUS P20V-out.vdd)

  public inst buck : regulator_example/components/TPS62933DRLR/module( output-voltage = 3.3 
                                                                input-voltage = 20.0
                                                                output-current = 0.75
                                                                ripple = 33.0e-3)
  net (P20V buck.vin)
  net P3V3 (buck.vout P3V3-out.vdd)

  net GND (usb-connector.GND pd-sink.gnd buck.gnd P3V3-out.gnd P20V-out.gnd)

  symbol(GND) = ocdb/utils/symbols/ground-sym
  symbol(P20V) = ocdb/utils/symbols/supply-sym
  symbol(P3V3) = ocdb/utils/symbols/supply-sym

  property(P20V.voltage) = typ(20.0)
  property(P3V3.voltage) = typ(3.3)
  property(GND.voltage) = typ(0.0)

  place(usb-connector) at loc(3.402, 5.8837, 180.0) on Top
  place(pd-sink) at loc(10.873, 4.2569, 0.0) on Top
  place(buck) at loc(0.0, 0.0, 0.0) on Top

; Module to run as a design
pcb-module my-design :

  public inst power : power-supply

  net GND (power.P20V-out.gnd)

  geom(GND) :
    copper-pour(LayerIndex(0), isolate = 0.1, rank = 1) = board-shape
    copper-pour(LayerIndex(1), isolate = 0.1, rank = 1) = board-shape

  ; MECHANICALS
  ; add-mounting-holes(board-shape, "M3")
  place(power) at loc(0.0, 0.0, 0.0) on Top

  ocdb/utils/checks/check-design(self)

setup-design(
  "generic-regulator",
  ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-2-layer, board-shape)
  vendors = [JLCPCB]
)

; Set the schematic sheet size
set-paper(ANSI-A)
set-use-layout-groups()

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(my-design)

; Use any helper function from helpers.stanza here
run-check-on-design(my-design)

; View the results
view-board()
view-schematic()
view-design-explorer()
; view-bom()