; ====================
; A battery manager recipe designed with JITX.
; ====================

; declare our package name and import dependencies
#use-added-syntax(jitx)
defpackage main : 
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/checks
  import ocdb/utils/generic-components
  import ocdb/utils/box-symbol
  import ocdb/utils/generator-utils

; Module to run as a design
val board-shape = RoundedRectangle(30.0, 18.5, 0.25)
pcb-module battery-manager-module :
  pin gnd

  ; setup the ground network
  net GND (gnd)
  symbol(GND) = ocdb/utils/symbols/ground-sym
  property(GND.voltage) = typ(0.0)

  ; draw a version number on the board silkscreen
  inst version-label  : ocdb/artwork/board-text/version-silkscreen("Version 0.1") ; make a version label text on silkscreen
  place(version-label) at loc(0.0, height(board-shape) / 2.0 - 1.0) on Bottom ; place the version label text at specified location

  ; create battery JST connector, connect it
  inst battery-connector : components/PH2_0-2PWB/component
  net (battery-connector.p[2] gnd)

  ; create the battery manager IC, connect it
  inst battery-manager : components/BQ24078RGTR/module
  net VBAT (battery-connector.p[1] battery-manager.bat+)
  net BMOUT (battery-manager.vout)
  net (battery-manager.gnd GND)

  ; create switch and pull up, connect them. Switch pulls SYSOFF down for normal operation, high to disconnect battery
  inst switch-phy : components/MK-12C02-G025/component
  net (switch-phy.left GND) ; switch turns battery-manager on
  net (switch-phy.center battery-manager.sysoff)
  val sys-r = res-strap(switch-phy.right VBAT, 100.0e3) ; pull-up turns battery monitor off

  ; create USB connector and connect it
  inst usb : usb2-on-a-usb-c-connector(ocdb/components/korean-hroparts-elec/TYPE-C-31-M-12/module(SinkDefault))
  net (usb.usb-2.vbus.gnd gnd)
  net VBUS (battery-manager.vin usb.usb-2.vbus.vdd)

  ; create the LDO and connect it
  inst ld : components/AP2125K-2_8TRG1/module
  net (battery-manager.vout ld.vin ld.en)
  net (ld.gnd, GND)
  net P2V8 (ld.vout)
  property(BMOUT.voltage) = min-max(3.5 5.0) ; set the acceptable voltage input range for the LDO, which receives its input as the output of the batter-manager
  
  ; set symbols of some nets
  symbol(VBAT) = ocdb/utils/symbols/supply-sym
  symbol(VBUS) = ocdb/utils/symbols/supply-sym
  symbol(BMOUT) = ocdb/utils/symbols/supply-sym
  symbol(P2V8) = ocdb/utils/symbols/supply-sym

  ; group some components in the schematic and layout to make it easier to read
  schematic-group([sys-r switch-phy battery-connector]) = schematic-group(battery-manager)
  layout-group([sys-r switch-phy battery-connector]) = layout-group(battery-manager)

; Setup board
set-design-directory("CAD") ; set which directly we will save to
set-board(ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-jlc2313, board-shape))
set-rules(ocdb/manufacturers/rules/jlcpcb-rules)

; Run the code
set-main-module(battery-manager-module) ; Treat the provided module as a design, and compile it.

; View the results
view-board()
view-schematic()
view-design-explorer()